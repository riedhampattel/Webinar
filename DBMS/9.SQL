BEGIN
	DBMS_OUTPUT.PUT_LINE('HELLO WORLD!');
END;

BEGIN
	DBMS_OUTPUT.PUT_LINE('HELLO WORLD!');
	DBMS_OUTPUT.PUT_LINE('HOW ARE YOU?');
	DBMS_OUTPUT.PUT('I AM FINE');
	DBMS_OUTPUT.PUT_LINE(' WHAT ABOUT YOU?');
END;

DECLARE
	I NUMBER := 12;
	CH CHAR := 'G';
	NAME VARCHAR(5) := 'TOPS';
	F FLOAT := 85.23;
BEGIN
	DBMS_OUTPUT.PUT_LINE('THE VALUE OF I = '||I);
	DBMS_OUTPUT.PUT_LINE('THE VALUE OF CH = '||CH);
	DBMS_OUTPUT.PUT_LINE('THE VALUE OF NAME = '||NAME);
	DBMS_OUTPUT.PUT_LINE('THE VALUE OF F = '||F);
END;

DECLARE
	NUM1 NUMBER := 5;
	NUM2 NUMBER := 2;
BEGIN
	DBMS_OUTPUT.PUT_LINE('THE ADDITION IS = '||(NUM1+NUM2));
	DBMS_OUTPUT.PUT_LINE('THE SUBTRACTION IS = '||(NUM1-NUM2));
	DBMS_OUTPUT.PUT_LINE('THE MULTIPLICATION IS = '||(NUM1*NUM2));
	DBMS_OUTPUT.PUT_LINE('THE DIVISION IS = '||(NUM1/NUM2));
	DBMS_OUTPUT.PUT_LINE('THE REMAINDER IS = '||MOD(NUM1,NUM2));
END;

DECLARE -- FIRST BLOCK
	X NUMBER := 10;
BEGIN
	DECLARE --SECOND BLOCK
		Y NUMBER := 20;
	BEGIN
		DECLARE --THIRD BLOCK
			Z NUMBER := 30;
		BEGIN
			DBMS_OUTPUT.PUT_LINE('THE VALUE OF X = '||X);
			DBMS_OUTPUT.PUT_LINE('THE VALUE OF Y = '||Y);
			DBMS_OUTPUT.PUT_LINE('THE VALUE OF Z = '||Z);
		END; --THIRD BLOCK;
		DBMS_OUTPUT.PUT_LINE('THE VALUE OF X = '||X);
		DBMS_OUTPUT.PUT_LINE('THE VALUE OF Y = '||Y);
	END; --SECOND BLOCK
	DBMS_OUTPUT.PUT_LINE('THE VALUE OF X = '||X);
END; --FIRST BLOCK

-- CONDITIONAL STATEMENTS
DECLARE
	AGE NUMBER := 2;
BEGIN
	IF AGE<18 THEN
		DBMS_OUTPUT.PUT_LINE('YOU ARE NOT ELIGIBLE FOR VOTING');
	ELSE
		DBMS_OUTPUT.PUT_LINE('YOU ARE ELIGIBLE FOR VOTING');
	END IF;
END;

-- LADDER IF ELSE
DECLARE 
	NUM1 NUMBER := 20;
	NUM2 NUMBER := 20;
BEGIN
	IF NUM1>NUM2 THEN
		DBMS_OUTPUT.PUT_LINE(NUM1||' IS A BIGGEST NUMBER');
	ELSIF NUM2>NUM1 THEN
		DBMS_OUTPUT.PUT_LINE(NUM2||' IS A BIGGEST NUMBER');
	ELSE
		DBMS_OUTPUT.PUT_LINE('BOTH ARE EQUAL NUMBERS');
	END IF;
END;

DECLARE
	NUM1 NUMBER := 10;
	NUM2 NUMBER := 20;
	NUM3 NUMBER := 30;
BEGIN
	IF NUM1>NUM2 THEN
		IF NUM1>NUM3 THEN
			DBMS_OUTPUT.PUT_LINE(NUM1||' IS A BIGGEST NUMBER');
		ELSE
			DBMS_OUTPUT.PUT_LINE(NUM3||' IS A BIGGEST NUMBER');
		END IF;
	ELSE
		IF NUM2>NUM3 THEN
			DBMS_OUTPUT.PUT_LINE(NUM2||' IS A BIGGEST NUMBER');
		ELSE
			DBMS_OUTPUT.PUT_LINE(NUM3||' IS A BIGGEST NUMBER');
		END IF;
	END IF;
END;

DECLARE
	NUM1 NUMBER := 10;
	NUM2 NUMBER := 20;
	NUM3 NUMBER := 30;
BEGIN
	IF NUM1>NUM2 AND NUM1>NUM3 THEN
		DBMS_OUTPUT.PUT_LINE(NUM1||' IS A BIGGEST NUMBER');
	ELSIF NUM2>NUM1 AND NUM2>NUM3 THEN
		DBMS_OUTPUT.PUT_LINE(NUM2||' IS A BIGGEST NUMBER');
	ELSE
		DBMS_OUTPUT.PUT_LINE(NUM3||' IS A BIGGEST NUMBER');
	END IF;
END;

-- SIMPLE LOOP
DECLARE
	I NUMBER := 1;
BEGIN
	LOOP
		DBMS_OUTPUT.PUT_LINE(I||'. HELLO WORLD');
		I := I + 1;
		IF I=6 THEN
            EXIT;
		END IF;
	END LOOP;
END;

DECLARE 
	I NUMBER := 5;
BEGIN
	LOOP
		DBMS_OUTPUT.PUT_LINE(I||'. HELLO WORLD');
		I := I - 1;
		EXIT WHEN I=0;
	END LOOP;
END;

-- FOR LOOP
BEGIN
	FOR X IN 1..5 LOOP
		DBMS_OUTPUT.PUT_LINE(X||'. HELLO WORLD');
	END LOOP;
END;
DECLARE
    I NUMBER := 5;
BEGIN
	FOR X IN 1..5 LOOP
		DBMS_OUTPUT.PUT_LINE(I||'. HELLO WORLD');
		I := I - 1;
	END LOOP;
END;

-- WHILE LOOP
DECLARE
	I NUMBER := 1;
BEGIN
	WHILE I<=5 LOOP
		DBMS_OUTPUT.PUT_LINE(I||'. HELLO WORLD');
		I := I + 1;
	END LOOP;
END;

DECLARE
	ID NUMBER := 102;
	FNAME VARCHAR(25);
	SAL INT;
BEGIN
	SELECT FIRST_NAME,SALARY INTO FNAME,SAL FROM EMPLOYEES WHERE EMPLOYEE_ID = ID;
	DBMS_OUTPUT.PUT_LINE('FIRST NAME = '||FNAME);
	DBMS_OUTPUT.PUT_LINE('SALARY = '||SAL);
END;

SELECT * FROM EMPLOYEES;

-- implicit cursor
DECLARE
	ROW_NUMBER NUMBER := 0;
BEGIN
	UPDATE EMPLOYEES SET SALARY = SALARY + 5000 WHERE DEPARTMENT_ID = 600;
	IF SQL%FOUND THEN
		ROW_NUMBER := SQL%ROWCOUNT;
	ELSE
		DBMS_OUTPUT.PUT_LINE('NO EMPLOYEES UPDATED');
	END IF;
	DBMS_OUTPUT.PUT_LINE('UPDATED EMPLOYEES = '||ROW_NUMBER);
END;

-- EXPLICIT CURSOR
DECLARE
	FNAME EMPLOYEES.FIRST_NAME%TYPE;
	SAL EMPLOYEES.SALARY%TYPE;
	CURSOR EMP IS SELECT FIRST_NAME,SALARY FROM EMPLOYEES;
BEGIN
	OPEN EMP;
	LOOP
		FETCH EMP INTO FNAME,SAL;
		DBMS_OUTPUT.PUT_LINE(FNAME||' GETS '||SAL||' AS A SALARY EVERY MONTH');
		EXIT WHEN EMP%NOTFOUND;
	END LOOP;
	CLOSE EMP;
END;